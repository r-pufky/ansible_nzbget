---
# yamllint disable rule:line-length
- name: 'Variable expressions | verify | service'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Variable expressions | verify | service | gather service status'
      ansible.builtin.service_facts:

    # NZBGet will fail if configuration is bad (r_pufky.srv.systemd)
    - name: 'Variable expressions | verify | service | assert nzbget.service active'
      ansible.builtin.assert:
        that:
          - '"nzbget.service" in ansible_facts.services'
          - 'ansible_facts["services"]["nzbget.service"]["state"] == "running"'
        fail_msg: 'nzbget.service should be enabled and running.'

- name: 'Variable expressions | verify | script files'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Variable expressions | verify | script files | query scripts'
      ansible.builtin.find:
        paths: '/var/lib/nzbget/scripts'
        recurse: false
        hidden: true
        file_type: 'file'
      register: _test_nzbget_skel

    - name: 'Variable expressions | verify | script files | assert scripts'
      ansible.builtin.assert:
        that:
          - _test_nzbget_skel.files | length == 2
        fail_msg: '/var/lib/nzbget/scripts{scan,post_processing} not found.'

- name: 'Variable expressions | verify | expressions'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Variable expressions | verify | expressions | query nzbget.conf'
      ansible.builtin.slurp:
        path: '/var/lib/nzbget/nzbget.conf'
      register: _test_nzbget_config_slurp

    - name: 'Variable expressions | verify | expressions | parse nzbget.conf'
      ansible.builtin.set_fact:
        _test_nzbget_config: '{{ _test_nzbget_config_slurp.content | b64decode }}'
      register: _test_nzbget_config

    - name: 'Variable expressions | verify | expressions | assert nzbget_extensions'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Extensions=scan,post_processing')
        fail_msg: 'nzbget_extensions should be (Extensions=scan,post_processing).'

    - name: 'Variable expressions | verify | expressions | assert nzbget_script_order'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('ScriptOrder=post_processing,scan')
        fail_msg: 'nzbget_script_order should be (ScriptOrder=post_processing,scan).'

    - name: 'Variable expressions | verify | expressions | assert nzbget_shell_override'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('ShellOverride=.py,/usr/bin/python2,.py3,/usr/bin/python3,.sh,/usr/bin/bash')
        fail_msg: 'nzbget_shell_override should be (ShellOverride=.py,/usr/bin/python2,.py3,/usr/bin/python3,.sh,/usr/bin/bash).'

    - name: 'Variable expressions | verify | expressions | assert nzbget_settings_extensions'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('InfoTarget=log')
        fail_msg: 'nzbget_settings_extensions should be (InfoTarget=log).'

    - name: 'Variable expressions | verify | expressions | assert nzbget_authorized_ip'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('AuthorizedIP=0.0.0.0,127.0.0.1')
        fail_msg: 'nzbget_authorized_ip should be (AuthorizedIP=0.0.0.0,127.0.0.1).'

    - name: 'Variable expressions | verify | expressions | assert nzbget_categories'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Category1.Extensions=scan,post_processing')
          - _test_nzbget_config is search('Category1.Aliases=TV - HD,TV*')
        fail_msg: >
          nzbget_categories should include:

          Category1.Extensions=scan,post_processing
          Category1.Aliases=TV - HD,TV*

    - name: 'Variable expressions | verify | expressions | assert nzbget_rss_feeds'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Feed1.filter=debian bookworm%iso%netinstall')
          - _test_nzbget_config is search('Feed1.extensions=post_processing,scan')
        fail_msg: >
          nzbget_rss_feeds should include:

          Feed1.filter=debian bookworm%iso%netinstall
          Feed1.extensions=post_processing,scan

    - name: 'Variable expressions | verify | expressions | assert nzbget_tasks.id=1'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Task1.Time=00:00,06:00,12:00,18:00')
          - _test_nzbget_config is search('Task1.WeekDays=1,3,5,6-7')
          - _test_nzbget_config is search('Task1.Param=1000')
        fail_msg: >
          nzbget_tasks.id=1 should include:

          Task1.Time=00:00,06:00,12:00,18:00
          Task1.WeekDays=1,3,5,6-7
          Task1.Param=1000

    - name: 'Variable expressions | verify | expressions | assert nzbget_tasks.id=2'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search("Task2.Param='/home/user/task process.sh' 'world''s fun'")
        fail_msg: >
          nzbget_tasks.id=2 should include:

          Task2.Param='/home/user/task process.sh' 'world''s fun'

    - name: 'Variable expressions | verify | expressions | assert nzbget_tasks.id=3'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Task3.Param=scan,post_processing')
        fail_msg: >
          nzbget_tasks.id=3 should include:

          Task3.Param=scan,post_processing

    - name: 'Variable expressions | verify | expressions | assert nzbget_tasks.id=4'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Task4.Param=activate_1,activate_2')
        fail_msg: >
          nzbget_tasks.id=4 should include:

          Task4.Param=activate_1,activate_2

    - name: 'Variable expressions | verify | expressions | assert nzbget_tasks.id=5'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Task5.Param=deactivate_1,deactivate_2')
        fail_msg: >
          nzbget_tasks.id=5 should include:

          Task5.Param=deactivate_1,deactivate_2

    - name: 'Variable expressions | verify | expressions | assert nzbget_tasks.id=6'
      ansible.builtin.assert:
        that:
          - _test_nzbget_config is search('Task6.Param=my feed,second feed')
        fail_msg: >
          nzbget_tasks.id=6 should include:

          Task6.Param=my feed,second feed
