---
###############################################################################
# Paths
###############################################################################
# Special Case:
#   * Use full paths. Do NOT use NZBGet variable interpretation '$MainDir'.
#
# Store all folders on fast, local drives (avoid network shares for
# nzbget_cfg_queue_dir or nzbget_cfg_inter_dir).
#
# NZB Import Process:
# 1. NZBs added to nzbget_cfg_nzb_dir or API are picked up and queued.
# 2. Queue info is moved to nzbget_cfg_queue_dir.
# 3. Articles are downloaded to the nzbget_cfg_inter_dir, then combined and
#    verified (using PAR2 if needed).
# 4. RAR or 7z files are unpacked in the same directory (nzbget_cfg_inter_dir)
#    after verification.
# 5. Once unpacking is complete, files are moved to nzbget_cfg_dest_dir â€”
#    finished download location.
# 6. If enabled, scripts from nzbget_cfg_script_dir run after completion (e.g.,
#    renaming, sorting, uploading).
#
# Reference:
# * https://nzbget.com/documentation/nzbget-path-and-folder-structure-guide

# Root directory for all operations.
#
# Default path for undefined paths. Always define all NZBGet paths using
# absolute paths (no variable interpretation).
#
# Use local disk.
#
# Default: '/var/lib/nzbget'.
nzbget_cfg_main_dir: '/var/lib/nzbget'

# Destination directory for downloaded files.
#
# Distinguish between partially downloaded files and completed downloads with
# nzbget_cfg_inter_dir.
#
# Default: '/data/downloads/completed'.
nzbget_cfg_dest_dir: '/data/downloads/completed'

# Directory to store intermediate files.
#
# Temporary working directory where all download processing, like repairs and
# unpacking, takes place. After a job succeeds, the final files are moved to
# the destination folder (nzbget_cfg_dest_dir), and the temporary files in
# nzbget_cfg_inter_dir are deleted. nzbget_cfg_direct_write uses this folder
# for post-processing.
#
# Place nzbget_cfg_inter_dir on a fast disk (preferably SSD), and keep it
# separate from both nzbget_cfg_dest_dir and the directory where Sonarr/Radarr
# transfers articles.
#
# When you use a fast disk for nzbget_cfg_inter_dir, you eliminate disk writing
# speed bottlenecks. By placing nzbget_cfg_inter_dir and nzbget_cfg_dest_dir on
# separate physical hard drives, you also reduce disk wear.
#
# Use local disk.
#
# Values:
#       '': Downloaded files are put directly to nzbget_cfg_dest_dir.
#   {PATH}: Absolute path to intermediate directory.
#
# Default: '/var/lib/nzbget/downloads/intermediate'
nzbget_cfg_inter_dir: '/var/lib/nzbget/downloads/intermediate'

# Directory for incoming nzb-files.
#
# New nzb-files added to queue via web-interface or RPC-API, are saved into
# this directory and then processed by extension scripts nzbget_cfg_extensions.
#
# Directory is also monitored for new nzb-files. If a new file is found it is
# added to download queue. The directory can have sub-directories. A nzb-file
# queued from a subdirectory is automatically assigned to category with
# sub-directory-name.
#
# Default: '/var/lib/nzbget/downloads/nzb'
nzbget_cfg_nzb_dir: '/var/lib/nzbget/downloads/nzb'

# Directory to store program state.
#
# Directory to save download queue, history, information about fetched RSS
# feeds, statistics, etc.
#
# Use local disk.
#
# Default: '/var/lib/nzbget/downloads/queue'
nzbget_cfg_queue_dir: '/var/lib/nzbget/downloads/queue'

# Directory to store temporary files. Default: '/var/lib/nzbget/tmp'.
nzbget_cfg_temp_dir: '/var/lib/nzbget/tmp'

# Directory with web-interface files.
#
# Values:
#       '': Disables WebUI (JSON/XML/RPC requests still enabled).
#   {PATH}: WebUI source files (default).
#
# Default: '/usr/share/nzbget/webui'
nzbget_cfg_web_dir: '/usr/share/nzbget/webui'

# List of directories with post-processing and other scripts.
#
# Default: '/var/lib/nzbget/scripts'
#
# Reference:
# * https://nzbget.com/documentation/extension-scripts/.
nzbget_cfg_script_dir: '/var/lib/nzbget/scripts'

# Lock-file for daemon-mode.
#
# Values:
#       '': Disable lock file & check for running instances (not recommended).
#   {PATH}: Absolute path to lock file.
#
# Default: '/var/lib/nzbget/downloads/nzbget.lock'
nzbget_cfg_lock_file: '/var/lib/nzbget/downloads/nzbget.lock'

# Log file location. Default: '/data/downloads/nzbget.log'.
nzbget_cfg_log_file: '/var/lib/nzbget/downloads/nzbget.log'

# Configuration file template.
#
# NZBGet configuration templated used by WebUI to read option descriptions.
#
# Default: '/usr/share/nzbget/nzbget.conf'
nzbget_cfg_config_template: '/usr/share/nzbget/nzbget.conf'

# List of required directories before processing starts.
#
# The list of directories is checked on program start. The program waits until
# all directories become available before starting download or post-processing.
# This is useful if the download destination is configured on network or
# external drives, which may require some time to mount on boot.
#
# Special Case:
#   * Only nzbget_cfg_inter_dir, nzbget_cfg_dest_dir (and per category) can be
#     waited.
#
# Default: [] (disabled).
nzbget_cfg_required_dir: []

# Certificate store file or directory.
#
# Certificate store contains root certificates used for server certificate
# verification when connecting to servers with encryption (TLS/SSL). This
# includes communication with news-servers for article downloading and
# with web-servers (via https) for fetching of rss feeds and nzb-files.
#
# Certificate verification must be enabled separately via
# nzbget_cfg_cert_check.
#
# Values:
#   {PATH}: Absolute path to directory containing certificate files.
#   {FILE}: Absolute path to big file containing all root certificates.
#
# Default: '/usr/share/nzbget/cacert.pem'
#
# Reference:
# * https://nzbget.com/documentation/certificate-verification/.
nzbget_cfg_cert_store: '/usr/share/nzbget/cacert.pem'
